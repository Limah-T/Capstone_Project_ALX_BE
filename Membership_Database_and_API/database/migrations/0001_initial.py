# Generated by Django 5.1.6 on 2025-03-23 17:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(error_messages={'max_length': 'first_name length cannot be more than 100 characters!', 'required': 'first_name cannot be empty!'}, max_length=100)),
                ('last_name', models.CharField(error_messages={'max_length': 'Latname length cannot be more than 100 characters!', 'required': 'last_name cannot be empty!'}, max_length=100)),
                ('email', models.EmailField(error_messages={'invalid': 'Invalid email address', 'required': 'Email cannot be empty!'}, max_length=254, unique=True)),
                ('address', models.TextField(error_messages={'max_length': 'Address cannot be more than 200 characters!', 'required': 'Address cannot be empty!'})),
                ('phonenumber', models.CharField(error_messages={'max_length': 'Phonenumber cannot be more than 15 digits!', 'required': 'Phonenumber is required!'}, help_text='Enter a valid phone number e.g "+234 803 5674 908, OR +36 201 2345 67 Or any valid number"', max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], error_messages={'required': 'Gender cannot be empty!'}, max_length=7)),
                ('nationality', models.CharField(choices=[('Nigerian', 'Nigerian'), ('Hungarian', 'Hungarian'), ('American', 'American'), ('British', 'British'), ('Canadian', 'Canadian'), ('German', 'German'), ('French', 'French'), ('Italian', 'Italian'), ('Spanish', 'Spanish'), ('Chinese', 'Chinese'), ('Japanese', 'Japanese'), ('Indian', 'Indian'), ('Brazilian', 'Brazilian'), ('South African', 'South African'), ('Kenyan', 'Kenyan'), ('Ghanaian', 'Ghanaian'), ('Egyptian', 'Egyptian'), ('Russian', 'Russian'), ('Australian', 'Australian'), ('Mexican', 'Mexican'), ('Saudi Arabian', 'Saudi Arabian'), ('Argentinian', 'Argentinian'), ('South Korean', 'South Korean'), ('Turkish', 'Turkish'), ('Swiss', 'Swiss'), ('Dutch', 'Dutch'), ('Swedish', 'Swedish'), ('Danish', 'Danish'), ('Finnish', 'Finnish'), ('Norwegian', 'Norwegian'), ('Portuguese', 'Portuguese'), ('Ukrainian', 'Ukrainian'), ('Polish', 'Polish'), ('Thai', 'Thai'), ('Malaysian', 'Malaysian'), ('Indonesian', 'Indonesian'), ('Filipino', 'Filipino'), ('Pakistani', 'Pakistani'), ('Bangladeshi', 'Bangladeshi'), ('Colombian', 'Colombian'), ('Venezuelan', 'Venezuelan'), ('Chilean', 'Chilean'), ('Peruvian', 'Peruvian'), ('New Zealander', 'New Zealander'), ('Singaporean', 'Singaporean'), ('Czech', 'Czech'), ('Austrian', 'Austrian'), ('Belgian', 'Belgian'), ('Greek', 'Greek'), ('Romanian', 'Romanian'), ('Vietnamese', 'Vietnamese'), ('Israeli', 'Israeli'), ('Emirati', 'Emirati'), ('Qatari', 'Qatari'), ('Omani', 'Omani'), ('Kuwaiti', 'Kuwaiti'), ('Iraqi', 'Iraqi'), ('Syrian', 'Syrian'), ('Lebanese', 'Lebanese'), ('Jordanian', 'Jordanian'), ('Moroccan', 'Moroccan'), ('Tunisian', 'Tunisian'), ('Algerian', 'Algerian'), ('Sudanese', 'Sudanese'), ('Ethiopian', 'Ethiopian'), ('Ugandan', 'Ugandan'), ('Zimbabwean', 'Zimbabwean'), ('Other', 'Other')], error_messages={'required': 'Nationality cannot be empty!'}, max_length=100)),
                ('title', models.CharField(choices=[('Mr', 'Mr.'), ('Mrs', 'Mrs.'), ('Miss', 'Miss'), ('Ms', 'Ms.'), ('Mx', 'Mx.'), ('Dr', 'Dr.'), ('Engr', 'Engr.'), ('Barr', 'Barr.'), ('Prof', 'Prof.'), ('Arch', 'Arch.'), ('Rev', 'Rev.'), ('Pastor', 'Pastor'), ('Imam', 'Imam'), ('Rabbi', 'Rabbi'), ('Gen', 'Gen.'), ('Col', 'Col.'), ('Maj', 'Maj.'), ('Capt', 'Capt.'), ('Lt', 'Lt.'), ('Cmdr', 'Cmdr.'), ('Hon', 'Hon.'), ('King', 'King'), ('Queen', 'Queen'), ('Prince', 'Prince'), ('Princess', 'Princess'), ('Chief', 'Chief')], default=('Mr', 'Mr.'), error_messages={'required': 'Title cannot be empty!'}, max_length=100)),
                ('profession', models.CharField(blank=True, choices=[('Doctor', 'Doctor'), ('Nurse', 'Nurse'), ('Pharmacist', 'Pharmacist'), ('Dentist', 'Dentist'), ('Medical Lab Scientist', 'Medical Lab Scientist'), ('Physiotherapist', 'Physiotherapist'), ('Surgeon', 'Surgeon'), ('Veterinarian', 'Veterinarian'), ('Psychologist', 'Psychologist'), ('Optometrist', 'Optometrist'), ('Civil Engineer', 'Civil Engineer'), ('Mechanical Engineer', 'Mechanical Engineer'), ('Electrical Engineer', 'Electrical Engineer'), ('Software Engineer', 'Software Engineer'), ('Data Scientist', 'Data Scientist'), ('Cybersecurity Analyst', 'Cybersecurity Analyst'), ('Telecommunications Engineer', 'Telecommunications Engineer'), ('Architect', 'Architect'), ('Surveyor', 'Surveyor'), ('Accountant', 'Accountant'), ('Auditor', 'Auditor'), ('Banker', 'Banker'), ('Investment Analyst', 'Investment Analyst'), ('Financial Advisor', 'Financial Advisor'), ('Tax Consultant', 'Tax Consultant'), ('Economist', 'Economist'), ('Lawyer', 'Lawyer'), ('Judge', 'Judge'), ('Legal Consultant', 'Legal Consultant'), ('Teacher', 'Teacher'), ('Professor', 'Professor'), ('Researcher', 'Researcher'), ('Librarian', 'Librarian'), ('Journalist', 'Journalist'), ('Writer', 'Writer'), ('Editor', 'Editor'), ('Public Relations Officer', 'Public Relations Officer'), ('Digital Marketer', 'Digital Marketer'), ('Musician', 'Musician'), ('Actor', 'Actor'), ('Film Director', 'Film Director'), ('Photographer', 'Photographer'), ('Graphic Designer', 'Graphic Designer'), ('Fashion Designer', 'Fashion Designer'), ('Hotel Manager', 'Hotel Manager'), ('Tour Guide', 'Tour Guide'), ('Event Planner', 'Event Planner'), ('Chef', 'Chef'), ('Electrician', 'Electrician'), ('Plumber', 'Plumber'), ('Carpenter', 'Carpenter'), ('Mechanic', 'Mechanic'), ('Police Officer', 'Police Officer'), ('Military Personnel', 'Military Personnel'), ('Firefighter', 'Firefighter'), ('Security Guard', 'Security Guard'), ('Entrepreneur', 'Entrepreneur'), ('Social Worker', 'Social Worker'), ('Clergy', 'Clergy'), ('Other', 'Other')], error_messages={'required': 'Profession cannot be empty!'}, max_length=100, null=True)),
                ('position_in_chambers', models.CharField(choices=[('president', 'President'), ('first_vice_president', '1st Vice President'), ('second_vice_president', '2nd Vice President'), ('executive_director', 'Executive Director'), ('executive_secretary', 'Executive Secretary'), ('finance_secretary', 'Finance Secretary/Treasurer'), ('publicity_secretary', 'Publicity Secretary'), ('business_dev', 'Director of Business Development'), ('legal_secretary', 'Legal Secretary'), ('legal_advisor', 'Legal Advisor'), ('treasurer', 'Treasurer'), ('secretary', 'Secretary')], error_messages={'required': 'Position cannot be empty!'}, max_length=25)),
                ('company_name', models.CharField(blank=True, error_messages={'required': 'Company name cannot be empty!'}, max_length=150, null=True)),
                ('nature_of_business', models.CharField(blank=True, choices=[('Agriculture', 'Agriculture'), ('Forestry', 'Forestry'), ('Fishing', 'Fishing'), ('Mining', 'Mining'), ('Food & Beverage Manufacturing', 'Food & Beverage Manufacturing'), ('Textile & Apparel', 'Textile & Apparel'), ('Chemical & Pharmaceuticals', 'Chemical & Pharmaceuticals'), ('Automobile & Machinery', 'Automobile & Machinery'), ('Electronics & Electrical', 'Electronics & Electrical'), ('Plastic & Rubber', 'Plastic & Rubber'), ('Metal & Steel', 'Metal & Steel'), ('Construction Materials', 'Construction Materials'), ('Wholesale Trade', 'Wholesale Trade'), ('Retail Trade', 'Retail Trade'), ('Import & Export', 'Import & Export'), ('E-commerce', 'E-commerce'), ('Consulting', 'Consulting'), ('Legal Services', 'Legal Services'), ('Accounting & Auditing', 'Accounting & Auditing'), ('Marketing & Advertising', 'Marketing & Advertising'), ('Real Estate & Property Management', 'Real Estate & Property Management'), ('Recruitment & HR Services', 'Recruitment & HR Services'), ('Business Support Services', 'Business Support Services'), ('Banking', 'Banking'), ('Insurance', 'Insurance'), ('Investment & Asset Management', 'Investment & Asset Management'), ('Fintech', 'Fintech'), ('Road Transport', 'Road Transport'), ('Air Transport', 'Air Transport'), ('Maritime & Shipping', 'Maritime & Shipping'), ('Courier & Delivery Services', 'Courier & Delivery Services'), ('Warehousing & Logistics', 'Warehousing & Logistics'), ('Oil & Gas', 'Oil & Gas'), ('Renewable Energy', 'Renewable Energy'), ('Electricity & Power Supply', 'Electricity & Power Supply'), ('Water Supply & Waste Management', 'Water Supply & Waste Management'), ('Software Development', 'Software Development'), ('Telecommunications', 'Telecommunications'), ('IT Services & Support', 'IT Services & Support'), ('Cybersecurity', 'Cybersecurity'), ('Hospitals & Clinics', 'Hospitals & Clinics'), ('Pharmaceuticals', 'Pharmaceuticals'), ('Medical Devices & Equipment', 'Medical Devices & Equipment'), ('Wellness & Fitness', 'Wellness & Fitness'), ('Hotels & Resorts', 'Hotels & Resorts'), ('Restaurants & Catering', 'Restaurants & Catering'), ('Travel & Tour Operators', 'Travel & Tour Operators'), ('Event Planning', 'Event Planning'), ('Publishing & Printing', 'Publishing & Printing'), ('Film & Television', 'Film & Television'), ('Music & Performing Arts', 'Music & Performing Arts'), ('Gaming & Esports', 'Gaming & Esports'), ('Primary & Secondary Schools', 'Primary & Secondary Schools'), ('Universities & Colleges', 'Universities & Colleges'), ('Vocational & Technical Training', 'Vocational & Technical Training'), ('E-learning', 'E-learning'), ('Government & Public Administration', 'Government & Public Administration'), ('Non-Profit & NGOs', 'Non-Profit & NGOs'), ('Religious Organizations', 'Religious Organizations'), ('Security Services', 'Security Services'), ('Other', 'Other')], error_messages={'required': 'Nature of Business cannot be empty!'}, max_length=150, null=True)),
                ('company_location', models.CharField(blank=True, error_messages={'required': 'Company Location cannot be empty!'}, max_length=100, null=True)),
                ('position_in_company', models.CharField(blank=True, error_messages={'required': 'Position in company cannot be empty!'}, max_length=100, null=True)),
                ('date_of_establishment', models.IntegerField(blank=True, error_messages={'required': 'Date of establishment cannot be empty!'}, null=True)),
                ('reg_no', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Registration number can only contain letters, numbers, '-', '/', and '.'", regex='^[A-Za-z0-9\\-\\/\\.]+$')])),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('past', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(error_messages={'max_length': 'first_name length cannot be more than 100 characters!', 'required': 'first_name cannot be empty!'}, max_length=100)),
                ('last_name', models.CharField(error_messages={'max_length': 'Latname length cannot be more than 100 characters!', 'required': 'last_name cannot be empty!'}, max_length=100)),
                ('email', models.EmailField(error_messages={'invalid': 'Invalid email address', 'required': 'Email cannot be empty!'}, max_length=254, unique=True)),
                ('address', models.TextField(error_messages={'max_length': 'Address cannot be more than 200 characters!', 'required': 'Address cannot be empty!'})),
                ('phonenumber', models.CharField(error_messages={'max_length': 'Phonenumber cannot be more than 15 digits!', 'required': 'Phonenumber is required!'}, help_text='Enter a valid phone number e.g "+234 803 5674 908, OR +36 201 2345 67 Or any valid number"', max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], error_messages={'required': 'Gender cannot be empty!'}, max_length=7)),
                ('nationality', models.CharField(choices=[('Nigerian', 'Nigerian'), ('Hungarian', 'Hungarian'), ('American', 'American'), ('British', 'British'), ('Canadian', 'Canadian'), ('German', 'German'), ('French', 'French'), ('Italian', 'Italian'), ('Spanish', 'Spanish'), ('Chinese', 'Chinese'), ('Japanese', 'Japanese'), ('Indian', 'Indian'), ('Brazilian', 'Brazilian'), ('South African', 'South African'), ('Kenyan', 'Kenyan'), ('Ghanaian', 'Ghanaian'), ('Egyptian', 'Egyptian'), ('Russian', 'Russian'), ('Australian', 'Australian'), ('Mexican', 'Mexican'), ('Saudi Arabian', 'Saudi Arabian'), ('Argentinian', 'Argentinian'), ('South Korean', 'South Korean'), ('Turkish', 'Turkish'), ('Swiss', 'Swiss'), ('Dutch', 'Dutch'), ('Swedish', 'Swedish'), ('Danish', 'Danish'), ('Finnish', 'Finnish'), ('Norwegian', 'Norwegian'), ('Portuguese', 'Portuguese'), ('Ukrainian', 'Ukrainian'), ('Polish', 'Polish'), ('Thai', 'Thai'), ('Malaysian', 'Malaysian'), ('Indonesian', 'Indonesian'), ('Filipino', 'Filipino'), ('Pakistani', 'Pakistani'), ('Bangladeshi', 'Bangladeshi'), ('Colombian', 'Colombian'), ('Venezuelan', 'Venezuelan'), ('Chilean', 'Chilean'), ('Peruvian', 'Peruvian'), ('New Zealander', 'New Zealander'), ('Singaporean', 'Singaporean'), ('Czech', 'Czech'), ('Austrian', 'Austrian'), ('Belgian', 'Belgian'), ('Greek', 'Greek'), ('Romanian', 'Romanian'), ('Vietnamese', 'Vietnamese'), ('Israeli', 'Israeli'), ('Emirati', 'Emirati'), ('Qatari', 'Qatari'), ('Omani', 'Omani'), ('Kuwaiti', 'Kuwaiti'), ('Iraqi', 'Iraqi'), ('Syrian', 'Syrian'), ('Lebanese', 'Lebanese'), ('Jordanian', 'Jordanian'), ('Moroccan', 'Moroccan'), ('Tunisian', 'Tunisian'), ('Algerian', 'Algerian'), ('Sudanese', 'Sudanese'), ('Ethiopian', 'Ethiopian'), ('Ugandan', 'Ugandan'), ('Zimbabwean', 'Zimbabwean'), ('Other', 'Other')], default=('Nigerian', 'Nigerian'), error_messages={'required': 'Nationality cannot be empty!'}, max_length=100)),
                ('position', models.CharField(choices=[('Admin Secretary', 'Admin Secretary'), ('Security', 'Security'), ('Cleaner', 'Cleaner')], error_messages={'required': 'Position cannot be empty!'}, max_length=25)),
                ('account_number', models.IntegerField(error_messages={'required': 'Account number cannot be empty!'})),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('date_employed', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('past', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(error_messages={'required': 'Email cannot be empty!'}, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CooperateMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(error_messages={'max_length': 'first_name length cannot be more than 100 characters!', 'required': 'first_name cannot be empty!'}, max_length=100)),
                ('last_name', models.CharField(error_messages={'max_length': 'Latname length cannot be more than 100 characters!', 'required': 'last_name cannot be empty!'}, max_length=100)),
                ('email', models.EmailField(error_messages={'invalid': 'Invalid email address', 'required': 'Email cannot be empty!'}, max_length=254, unique=True)),
                ('address', models.TextField(error_messages={'max_length': 'Address cannot be more than 200 characters!', 'required': 'Address cannot be empty!'})),
                ('phonenumber', models.CharField(error_messages={'max_length': 'Phonenumber cannot be more than 15 digits!', 'required': 'Phonenumber is required!'}, help_text='Enter a valid phone number e.g "+234 803 5674 908, OR +36 201 2345 67 Or any valid number"', max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], error_messages={'required': 'Gender cannot be empty!'}, max_length=7)),
                ('nationality', models.CharField(choices=[('Nigerian', 'Nigerian'), ('Hungarian', 'Hungarian'), ('American', 'American'), ('British', 'British'), ('Canadian', 'Canadian'), ('German', 'German'), ('French', 'French'), ('Italian', 'Italian'), ('Spanish', 'Spanish'), ('Chinese', 'Chinese'), ('Japanese', 'Japanese'), ('Indian', 'Indian'), ('Brazilian', 'Brazilian'), ('South African', 'South African'), ('Kenyan', 'Kenyan'), ('Ghanaian', 'Ghanaian'), ('Egyptian', 'Egyptian'), ('Russian', 'Russian'), ('Australian', 'Australian'), ('Mexican', 'Mexican'), ('Saudi Arabian', 'Saudi Arabian'), ('Argentinian', 'Argentinian'), ('South Korean', 'South Korean'), ('Turkish', 'Turkish'), ('Swiss', 'Swiss'), ('Dutch', 'Dutch'), ('Swedish', 'Swedish'), ('Danish', 'Danish'), ('Finnish', 'Finnish'), ('Norwegian', 'Norwegian'), ('Portuguese', 'Portuguese'), ('Ukrainian', 'Ukrainian'), ('Polish', 'Polish'), ('Thai', 'Thai'), ('Malaysian', 'Malaysian'), ('Indonesian', 'Indonesian'), ('Filipino', 'Filipino'), ('Pakistani', 'Pakistani'), ('Bangladeshi', 'Bangladeshi'), ('Colombian', 'Colombian'), ('Venezuelan', 'Venezuelan'), ('Chilean', 'Chilean'), ('Peruvian', 'Peruvian'), ('New Zealander', 'New Zealander'), ('Singaporean', 'Singaporean'), ('Czech', 'Czech'), ('Austrian', 'Austrian'), ('Belgian', 'Belgian'), ('Greek', 'Greek'), ('Romanian', 'Romanian'), ('Vietnamese', 'Vietnamese'), ('Israeli', 'Israeli'), ('Emirati', 'Emirati'), ('Qatari', 'Qatari'), ('Omani', 'Omani'), ('Kuwaiti', 'Kuwaiti'), ('Iraqi', 'Iraqi'), ('Syrian', 'Syrian'), ('Lebanese', 'Lebanese'), ('Jordanian', 'Jordanian'), ('Moroccan', 'Moroccan'), ('Tunisian', 'Tunisian'), ('Algerian', 'Algerian'), ('Sudanese', 'Sudanese'), ('Ethiopian', 'Ethiopian'), ('Ugandan', 'Ugandan'), ('Zimbabwean', 'Zimbabwean'), ('Other', 'Other')], error_messages={'required': 'Nationality cannot be empty!'}, max_length=100)),
                ('title', models.CharField(choices=[('Mr', 'Mr.'), ('Mrs', 'Mrs.'), ('Miss', 'Miss'), ('Ms', 'Ms.'), ('Mx', 'Mx.'), ('Dr', 'Dr.'), ('Engr', 'Engr.'), ('Barr', 'Barr.'), ('Prof', 'Prof.'), ('Arch', 'Arch.'), ('Rev', 'Rev.'), ('Pastor', 'Pastor'), ('Imam', 'Imam'), ('Rabbi', 'Rabbi'), ('Gen', 'Gen.'), ('Col', 'Col.'), ('Maj', 'Maj.'), ('Capt', 'Capt.'), ('Lt', 'Lt.'), ('Cmdr', 'Cmdr.'), ('Hon', 'Hon.'), ('King', 'King'), ('Queen', 'Queen'), ('Prince', 'Prince'), ('Princess', 'Princess'), ('Chief', 'Chief')], error_messages={'required': 'Title cannot be empty!'}, max_length=100)),
                ('company_name', models.CharField(error_messages={'required': 'Company name cannot be empty!'}, max_length=150)),
                ('core_line_of_business', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Forestry', 'Forestry'), ('Fishing', 'Fishing'), ('Mining', 'Mining'), ('Food & Beverage Manufacturing', 'Food & Beverage Manufacturing'), ('Textile & Apparel', 'Textile & Apparel'), ('Chemical & Pharmaceuticals', 'Chemical & Pharmaceuticals'), ('Automobile & Machinery', 'Automobile & Machinery'), ('Electronics & Electrical', 'Electronics & Electrical'), ('Plastic & Rubber', 'Plastic & Rubber'), ('Metal & Steel', 'Metal & Steel'), ('Construction Materials', 'Construction Materials'), ('Wholesale Trade', 'Wholesale Trade'), ('Retail Trade', 'Retail Trade'), ('Import & Export', 'Import & Export'), ('E-commerce', 'E-commerce'), ('Consulting', 'Consulting'), ('Legal Services', 'Legal Services'), ('Accounting & Auditing', 'Accounting & Auditing'), ('Marketing & Advertising', 'Marketing & Advertising'), ('Real Estate & Property Management', 'Real Estate & Property Management'), ('Recruitment & HR Services', 'Recruitment & HR Services'), ('Business Support Services', 'Business Support Services'), ('Banking', 'Banking'), ('Insurance', 'Insurance'), ('Investment & Asset Management', 'Investment & Asset Management'), ('Fintech', 'Fintech'), ('Road Transport', 'Road Transport'), ('Air Transport', 'Air Transport'), ('Maritime & Shipping', 'Maritime & Shipping'), ('Courier & Delivery Services', 'Courier & Delivery Services'), ('Warehousing & Logistics', 'Warehousing & Logistics'), ('Oil & Gas', 'Oil & Gas'), ('Renewable Energy', 'Renewable Energy'), ('Electricity & Power Supply', 'Electricity & Power Supply'), ('Water Supply & Waste Management', 'Water Supply & Waste Management'), ('Software Development', 'Software Development'), ('Telecommunications', 'Telecommunications'), ('IT Services & Support', 'IT Services & Support'), ('Cybersecurity', 'Cybersecurity'), ('Hospitals & Clinics', 'Hospitals & Clinics'), ('Pharmaceuticals', 'Pharmaceuticals'), ('Medical Devices & Equipment', 'Medical Devices & Equipment'), ('Wellness & Fitness', 'Wellness & Fitness'), ('Hotels & Resorts', 'Hotels & Resorts'), ('Restaurants & Catering', 'Restaurants & Catering'), ('Travel & Tour Operators', 'Travel & Tour Operators'), ('Event Planning', 'Event Planning'), ('Publishing & Printing', 'Publishing & Printing'), ('Film & Television', 'Film & Television'), ('Music & Performing Arts', 'Music & Performing Arts'), ('Gaming & Esports', 'Gaming & Esports'), ('Primary & Secondary Schools', 'Primary & Secondary Schools'), ('Universities & Colleges', 'Universities & Colleges'), ('Vocational & Technical Training', 'Vocational & Technical Training'), ('E-learning', 'E-learning'), ('Government & Public Administration', 'Government & Public Administration'), ('Non-Profit & NGOs', 'Non-Profit & NGOs'), ('Religious Organizations', 'Religious Organizations'), ('Security Services', 'Security Services'), ('Other', 'Other')], error_messages={'required': 'Nature of Business cannot be empty!'}, max_length=150)),
                ('company_interest_in_hungary', models.TextField(blank=True, null=True)),
                ('company_location', models.CharField(error_messages={'required': 'Company Location cannot be empty!'}, max_length=100)),
                ('position_in_company', models.CharField(error_messages={'required': 'Position in company cannot be empty!'}, max_length=100)),
                ('date_of_establishment', models.IntegerField(error_messages={'required': 'Date of establishment cannot be empty!'})),
                ('reg_no', models.CharField(blank=True, max_length=30, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Registration number can only contain letters, numbers, '-', '/', and '.'", regex='^[A-Za-z0-9\\-\\/\\.]+$')])),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('past', models.BooleanField(default=False)),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cooperate_member', to='database.director')),
            ],
        ),
        migrations.CreateModel(
            name='IndividualMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(error_messages={'max_length': 'first_name length cannot be more than 100 characters!', 'required': 'first_name cannot be empty!'}, max_length=100)),
                ('last_name', models.CharField(error_messages={'max_length': 'Latname length cannot be more than 100 characters!', 'required': 'last_name cannot be empty!'}, max_length=100)),
                ('email', models.EmailField(error_messages={'invalid': 'Invalid email address', 'required': 'Email cannot be empty!'}, max_length=254, unique=True)),
                ('address', models.TextField(error_messages={'max_length': 'Address cannot be more than 200 characters!', 'required': 'Address cannot be empty!'})),
                ('phonenumber', models.CharField(error_messages={'max_length': 'Phonenumber cannot be more than 15 digits!', 'required': 'Phonenumber is required!'}, help_text='Enter a valid phone number e.g "+234 803 5674 908, OR +36 201 2345 67 Or any valid number"', max_length=15, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], error_messages={'required': 'Gender cannot be empty!'}, max_length=7)),
                ('nationality', models.CharField(choices=[('Nigerian', 'Nigerian'), ('Hungarian', 'Hungarian'), ('American', 'American'), ('British', 'British'), ('Canadian', 'Canadian'), ('German', 'German'), ('French', 'French'), ('Italian', 'Italian'), ('Spanish', 'Spanish'), ('Chinese', 'Chinese'), ('Japanese', 'Japanese'), ('Indian', 'Indian'), ('Brazilian', 'Brazilian'), ('South African', 'South African'), ('Kenyan', 'Kenyan'), ('Ghanaian', 'Ghanaian'), ('Egyptian', 'Egyptian'), ('Russian', 'Russian'), ('Australian', 'Australian'), ('Mexican', 'Mexican'), ('Saudi Arabian', 'Saudi Arabian'), ('Argentinian', 'Argentinian'), ('South Korean', 'South Korean'), ('Turkish', 'Turkish'), ('Swiss', 'Swiss'), ('Dutch', 'Dutch'), ('Swedish', 'Swedish'), ('Danish', 'Danish'), ('Finnish', 'Finnish'), ('Norwegian', 'Norwegian'), ('Portuguese', 'Portuguese'), ('Ukrainian', 'Ukrainian'), ('Polish', 'Polish'), ('Thai', 'Thai'), ('Malaysian', 'Malaysian'), ('Indonesian', 'Indonesian'), ('Filipino', 'Filipino'), ('Pakistani', 'Pakistani'), ('Bangladeshi', 'Bangladeshi'), ('Colombian', 'Colombian'), ('Venezuelan', 'Venezuelan'), ('Chilean', 'Chilean'), ('Peruvian', 'Peruvian'), ('New Zealander', 'New Zealander'), ('Singaporean', 'Singaporean'), ('Czech', 'Czech'), ('Austrian', 'Austrian'), ('Belgian', 'Belgian'), ('Greek', 'Greek'), ('Romanian', 'Romanian'), ('Vietnamese', 'Vietnamese'), ('Israeli', 'Israeli'), ('Emirati', 'Emirati'), ('Qatari', 'Qatari'), ('Omani', 'Omani'), ('Kuwaiti', 'Kuwaiti'), ('Iraqi', 'Iraqi'), ('Syrian', 'Syrian'), ('Lebanese', 'Lebanese'), ('Jordanian', 'Jordanian'), ('Moroccan', 'Moroccan'), ('Tunisian', 'Tunisian'), ('Algerian', 'Algerian'), ('Sudanese', 'Sudanese'), ('Ethiopian', 'Ethiopian'), ('Ugandan', 'Ugandan'), ('Zimbabwean', 'Zimbabwean'), ('Other', 'Other')], error_messages={'required': 'Nationality cannot be empty!'}, max_length=100)),
                ('profession', models.CharField(choices=[('Doctor', 'Doctor'), ('Nurse', 'Nurse'), ('Pharmacist', 'Pharmacist'), ('Dentist', 'Dentist'), ('Medical Lab Scientist', 'Medical Lab Scientist'), ('Physiotherapist', 'Physiotherapist'), ('Surgeon', 'Surgeon'), ('Veterinarian', 'Veterinarian'), ('Psychologist', 'Psychologist'), ('Optometrist', 'Optometrist'), ('Civil Engineer', 'Civil Engineer'), ('Mechanical Engineer', 'Mechanical Engineer'), ('Electrical Engineer', 'Electrical Engineer'), ('Software Engineer', 'Software Engineer'), ('Data Scientist', 'Data Scientist'), ('Cybersecurity Analyst', 'Cybersecurity Analyst'), ('Telecommunications Engineer', 'Telecommunications Engineer'), ('Architect', 'Architect'), ('Surveyor', 'Surveyor'), ('Accountant', 'Accountant'), ('Auditor', 'Auditor'), ('Banker', 'Banker'), ('Investment Analyst', 'Investment Analyst'), ('Financial Advisor', 'Financial Advisor'), ('Tax Consultant', 'Tax Consultant'), ('Economist', 'Economist'), ('Lawyer', 'Lawyer'), ('Judge', 'Judge'), ('Legal Consultant', 'Legal Consultant'), ('Teacher', 'Teacher'), ('Professor', 'Professor'), ('Researcher', 'Researcher'), ('Librarian', 'Librarian'), ('Journalist', 'Journalist'), ('Writer', 'Writer'), ('Editor', 'Editor'), ('Public Relations Officer', 'Public Relations Officer'), ('Digital Marketer', 'Digital Marketer'), ('Musician', 'Musician'), ('Actor', 'Actor'), ('Film Director', 'Film Director'), ('Photographer', 'Photographer'), ('Graphic Designer', 'Graphic Designer'), ('Fashion Designer', 'Fashion Designer'), ('Hotel Manager', 'Hotel Manager'), ('Tour Guide', 'Tour Guide'), ('Event Planner', 'Event Planner'), ('Chef', 'Chef'), ('Electrician', 'Electrician'), ('Plumber', 'Plumber'), ('Carpenter', 'Carpenter'), ('Mechanic', 'Mechanic'), ('Police Officer', 'Police Officer'), ('Military Personnel', 'Military Personnel'), ('Firefighter', 'Firefighter'), ('Security Guard', 'Security Guard'), ('Entrepreneur', 'Entrepreneur'), ('Social Worker', 'Social Worker'), ('Clergy', 'Clergy'), ('Other', 'Other')], error_messages={'required': 'Profession cannot be empty!'}, max_length=100)),
                ('title', models.CharField(choices=[('Mr', 'Mr.'), ('Mrs', 'Mrs.'), ('Miss', 'Miss'), ('Ms', 'Ms.'), ('Mx', 'Mx.'), ('Dr', 'Dr.'), ('Engr', 'Engr.'), ('Barr', 'Barr.'), ('Prof', 'Prof.'), ('Arch', 'Arch.'), ('Rev', 'Rev.'), ('Pastor', 'Pastor'), ('Imam', 'Imam'), ('Rabbi', 'Rabbi'), ('Gen', 'Gen.'), ('Col', 'Col.'), ('Maj', 'Maj.'), ('Capt', 'Capt.'), ('Lt', 'Lt.'), ('Cmdr', 'Cmdr.'), ('Hon', 'Hon.'), ('King', 'King'), ('Queen', 'Queen'), ('Prince', 'Prince'), ('Princess', 'Princess'), ('Chief', 'Chief')], error_messages={'required': 'Title cannot be empty!'}, max_length=100)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('past', models.BooleanField(default=False)),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='individual_member', to='database.director')),
            ],
        ),
    ]
